{"version":3,"sources":["webpack:///../rina-lib/src/lib/components/service-booking/service.availiblity-lib.component.html","webpack:///../rina-lib/src/lib/components/service-booking/service.availiblity-lib.component.ts","webpack:///../rina-lib/src/lib/model/service.availiblity.model.ts","webpack:///../rina-lib/src/lib/model/shared/daterange.model.ts","webpack:///../rina-lib/src/lib/rina-lib.components.ts","webpack:///../rina-lib/src/lib/rina-lib.module.ts","webpack:///../rina-lib/src/lib/services/bookingavailable/service.booking.service.ts","webpack:///../rina-lib/src/lib/services/service.constant.ts","webpack:///../rina-lib/src/lib/services/servicebooking/service.booking.service.ts","webpack:///../rina-lib/src/lib/services/shared/common.service.ts","webpack:///../rina-lib/src/lib/services/shared/http.service.ts","webpack:///../rina-lib/src/public_api.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/feature-component/company-logo/company.logo.component.html","webpack:///./src/app/feature-component/company-logo/company.logo.component.ts","webpack:///./src/app/feature-component/confirmation/service.confirmation.html","webpack:///./src/app/feature-component/confirmation/service.confirmation.ts","webpack:///./src/app/feature-component/customer-details/customer-details.component.html","webpack:///./src/app/feature-component/customer-details/customer.details.component.ts","webpack:///./src/app/feature-component/preferred-location/preferred.location.html","webpack:///./src/app/feature-component/preferred-location/preferred.location.ts","webpack:///./src/app/feature-component/searchbox/searchbox.component.html","webpack:///./src/app/feature-component/searchbox/searchbox.component.ts","webpack:///./src/app/feature-component/vehicle-details/vehicle.details.component.html","webpack:///./src/app/feature-component/vehicle-details/vehicle.details.component.ts","webpack:///./src/app/feature-component/vehicle-service-history/vehicle.service.history.component.html","webpack:///./src/app/feature-component/vehicle-service-history/vehicle.service.history.component.ts","webpack:///./src/app/models/customer.details.model.ts","webpack:///./src/app/rina-home/rina-home.component.html","webpack:///./src/app/rina-home/rina-home.component.ts","webpack:///./src/app/services/service.details.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<amexio-layout-columns [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n    <amexio-layout-item>\\n        <amexio-row>\\n            <amexio-column [size]=12>\\n                <amexio-dropdown [(ngModel)]=\\\"serviceModel.location\\\" [place-holder]=\\\"'Select Location'\\\" name=\\\"location\\\" [field-label]=\\\"'Select Location'\\\" [data]=\\\"serviceLocations\\\" [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\" (onSingleSelect)=\\\"onLocationClick($event)\\\">\\n                </amexio-dropdown>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=9>\\n                <amexio-date-time-picker [field-label]=\\\"'Select Date'\\\" [min-date]=\\\"minDate\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" name=\\\"appointmentDate\\\" [min-date]=\\\"todayDate\\\" [(ngModel)]=\\\"serviceModel.appointmentDate\\\">\\n                </amexio-date-time-picker>\\n            </amexio-column>\\n            <amexio-column [size]=3>\\n                <amexio-dropdown [(ngModel)]=\\\"serviceModel.appointmentTime\\\" (onSingleSelect)=\\\"setTime($event)\\\" [place-holder]=\\\"'Select Time'\\\" name=\\\"appointmentTime\\\" [field-label]=\\\"'Select time'\\\" [data]=\\\"timeSlots\\\" [display-field]=\\\"'time'\\\" [value-field]=\\\"'timeId'\\\">\\n                </amexio-dropdown>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=12>\\n                <amexio-dropdown [(ngModel)]=\\\"serviceModel.assitantPerson\\\" [place-holder]=\\\"'Select SA'\\\" name=\\\"assitantPerson\\\" [field-label]=\\\"'Service Assistant (SA)'\\\" [data]=\\\"assitantPerson\\\" [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\">\\n                </amexio-dropdown>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=12>\\n                <amexio-button [label]=\\\"'CHECK SA AVAILIBLITY'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'CHECK SA AVAILIBLITY'\\\" (onClick)=\\\"checkAvailiblity()\\\"></amexio-button>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=12>\\n                <amexio-ee-appointment [height]=\\\"'200px'\\\" [date]=\\\"serviceModel.appointmentDate\\\" [start-time]=\\\"serviceModel.appointmentTime\\\" [end-time]=\\\"endTime\\\" [available-slots]=\\\"availableslots\\\" (onSelection)=\\\"onSelection($event)\\\"></amexio-ee-appointment>\\n            </amexio-column>\\n        </amexio-row>\\n\\n    </amexio-layout-item>\\n    <amexio-layout-item [fit]=\\\"true\\\">\\n        <amexio-google-map [initial-zoom-level]=\\\"2\\\" [height]=\\\"'100%'\\\" [data]=\\\"serviceStations\\\" (onMarkerClick)=\\\"onMarkerClick($event)\\\" [google-map-key]=\\\"'AIzaSyDKSPX97z-ndeh_Mgq3xkaML2Kp9AwHA9s'\\\">\\n        </amexio-google-map>\\n    </amexio-layout-item>\\n</amexio-layout-columns>\"","import { BookingAvailableService } from './../../services/bookingavailable/service.booking.service';\n\nimport {Component, OnInit, Input} from '@angular/core';\nimport { GoogleMapOverlays } from 'amexio-ng-extensions';\n\nimport { ServiceBookingService } from '../../services/servicebooking/service.booking.service';\nimport { ServiceAvailibilityModel } from '../../model/service.availiblity.model';\nimport { LocationModel } from '../../model/shared/location.model';\nimport { CommonService } from '../../services/shared/common.service';\nimport { TimeModel } from 'amexio-ng-extensions';\nimport { ServiceAssistantModel } from '../../model/shared/serviceassistant.model';\nimport { AvailableSlotsModel } from 'amexio-ng-extensions';\nimport { DatePipe } from '@angular/common';\nimport { DateRangeModel } from 'projects/rina-lib/src/lib/model/shared/daterange.model';\n\n@Component({\n    selector: 'service-availiblity-lib',\n    templateUrl : './service.availiblity-lib.component.html'\n})\nexport class ServiceAvailiblityComponent implements OnInit {\n\n    serviceStations: GoogleMapOverlays[];\n    serviceLocations: LocationModel [];\n    timeSlots: TimeModel [];\n    assitantPerson: ServiceAssistantModel [];\n    availableslots: AvailableSlotsModel[];\n\n    @Input('start-time') startTime: number = 10;\n\n    @Input('end-time') endTime: number = 12;\n\n    @Input('service-model') serviceModel: ServiceAvailibilityModel;\n\n    @Input('is-edit-mode') isEditModel: boolean;\n\n    minDate: any;\n\n    isAvailable: boolean;\n\n    dateRangeModel: DateRangeModel;\n\n    constructor(private sbService: ServiceBookingService, private commonService: CommonService,\n       private bookingAvailableService: BookingAvailableService) {\n       this.serviceStations = [];\n       this.assitantPerson = [];\n       this.availableslots = [];\n       this.serviceModel = new ServiceAvailibilityModel();\n       this.minDate = new DatePipe('en-US').transform(new Date(), 'dd-MMM-yyyy');\n       this.dateRangeModel = new DateRangeModel();\n      }\n\n    checkAvailiblity() {\n        let response: any;\n        this.availableslots = [];\n\n\n        this.dateRangeModel.inDate = this.serviceModel.appointmentDate;\n        this.dateRangeModel.locationid = this.serviceModel.location;\n        this.bookingAvailableService.getAllAvailabelSlots(this.dateRangeModel).subscribe((resp: any) => {\n          response = resp;\n        },\n        (error: any) => {\n        },\n        () => {\n           if (response) {\n            this.availableslots = [];\n            response.forEach((element: any) => {\n              this.availableslots.push(new AvailableSlotsModel(new Date(element.datetime), element.data));\n            });\n           }\n        });\n    }\n\n    ngOnInit() {\n        this.initLocation();\n        this.initTime();\n    }\n\n    onSelection(event: any) {\n    }\n\n    private initLocation(): void {\n\n        let response: any;\n        this.sbService.fetchLocations().subscribe((resp: any) => {\n            response = resp;\n        },\n        (error: any) => {\n        },\n        () => {\n            this.serviceLocations = response;\n            this.serviceStations = [];\n            this.serviceLocations.forEach((element: any) => {\n              if (element) {\n               this.serviceStations.push(new GoogleMapOverlays(Number(element.latitude),Number(element.longitude), element.locationName +'UAE',true,null,{country:'United Arab Emirates', capital:'Abu Dhabi',locationId:element.locationUUID}));\n              }\n            });\n            console.log(this.serviceStations);\n        });\n\n    }\n\n    private initSA(id: string): void {\n        let response: any;\n        this.sbService.fetchSABasedOnLocation(id).subscribe((resp: any) => {\n            response = resp;\n        },\n        (error: any) => {\n        },\n        () => {\n            this.assitantPerson = response;\n        });\n    }\n\n    private initTime(): void {\n        this.timeSlots = this.commonService.workingSlot1();\n        if (this.timeSlots && this.timeSlots.length > 0) {\n         this.endTime = this.timeSlots.pop().timeId;\n        }\n    }\n\n    setTime(event: any) {\n\n    }\n\n    onMarkerClick(serviceStation: any) {\n      if (serviceStation.locationId) {\n        this.serviceModel.location = serviceStation.locationId;\n        this.initSA(this.serviceModel.location);\n      }\n\n    }\n\n    onLocationClick(data:any) {\n      this.initSA(data.primaryKey);\n    }\n}\n","export class ServiceAvailibilityModel {\n    location: string;\n    appointmentDate: Date = new Date();\n    appointmentTime: number = 10;\n    assitantPerson: string;\n}\n","export class DateRangeModel {\n  inDate: any;\n  outDate: any;\n  locationid: string;\n}\n","import { ServiceAvailiblityComponent } from './components/service-booking/service.availiblity-lib.component';\n\nexport const RINA_COMPONENTS: any[] = [\n  ServiceAvailiblityComponent,\n];\n","import { NgModule } from '@angular/core';\nimport { RINA_COMPONENTS } from './rina-lib.components';\nimport { HttpService } from './services/shared/http.service';\nimport { FormsModule } from '@angular/forms';\nimport { AmexioWidgetModule, AmexioEnterpriseModule } from 'amexio-ng-extensions';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceBookingService } from './services/servicebooking/service.booking.service';\nimport { CommonService } from './services/shared/common.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: RINA_COMPONENTS,\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AmexioWidgetModule,\n    AmexioEnterpriseModule,\n    ReactiveFormsModule\n  ],\n  providers: [HttpService, ServiceBookingService, CommonService],\n  exports: RINA_COMPONENTS\n})\nexport class RinaLibModule { }\n","import { DateRangeModel } from './../../model/shared/daterange.model';\nimport { Injectable } from \"@angular/core\";\nimport { HttpService } from \"../shared/http.service\";\nimport { environment } from 'src/environments/environment';\nimport { SERVICE_URL } from './../service.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingAvailableService {\n\n    constructor(private http: HttpService) {\n\n    }\n    getAllAvailabelSlots(dateRangeModel: DateRangeModel ) {\n        return this.http.post(SERVICE_URL.BASE_APP_URL + 'assistant/available', 'post', dateRangeModel);\n    }\n}\n","export const SERVICE_URL = {\n\tBASE_APP_URL : 'https://restapi.amexio.org:8991/alfahim/api/'\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"../shared/http.service\";\nimport { SERVICE_URL } from './../service.constant';\n\n@Injectable()\nexport class ServiceBookingService {\n\n    constructor(private http: HttpService) {\n\n    }\n\n    fetchLocations() {\n        return this.http.fetch(SERVICE_URL.BASE_APP_URL + 'map/', 'get');\n    }\n\n    fetchSABasedOnLocation(locationId: string) {\n        return this.http.fetch(SERVICE_URL.BASE_APP_URL + 'serviceassitant/' + locationId, 'get');\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"../shared/http.service\";\nimport { TimeModel, TimeUtil } from \"amexio-ng-extensions\";\n\n@Injectable()\nexport class CommonService {\n\n    timeData() : TimeModel [] {\n       return new TimeUtil().timeData(false);\n    }\n\n    workingSlot1() : TimeModel [] {\n        return new TimeUtil().workingslot1();\n     }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/index';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    fetch(serviceUrl: string, methodType: string): Observable<any> {\n        const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n        if (methodType === 'post') {\n          debugger;\n            return this.http.post(serviceUrl, { headers });\n        } else if (methodType === 'get') {\n            return this.http.get(serviceUrl, { headers });\n        }\n    }\n\n\n    post(serviceUrl: string, methodType: string, requestJson: any): Observable<any> {\n\n        const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n        if (methodType === 'post') {\n            return this.http.post(serviceUrl, requestJson, { headers });\n        } else if (methodType === 'get') {\n            return this.http.get(serviceUrl, { headers });\n        }\n    }\n\n}\n","/*\n * Public API Surface of rina-lib\n */\n\nexport * from './lib/rina-lib.module';\nexport * from './lib/components/service-booking/service.availiblity-lib.component';\nexport * from './lib/model/service.availiblity.model';\nexport * from '../../rinaccm/src/app/models/customer.details.model';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9yaW5hY2NtL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<rina-home></rina-home>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent } from './app.component';\nimport {RinaHomeComponent} from './rina-home/rina-home.component';\nimport {AmexioWidgetModule} from 'amexio-ng-extensions';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RinaLibModule} from '../../../rina-lib/src/lib/rina-lib.module';\nimport {VehicleDetailsComponent} from './feature-component/vehicle-details/vehicle.details.component';\nimport {CompanyLogoComponent} from './feature-component/company-logo/company.logo.component';\nimport {SearchBoxComponent} from './feature-component/searchbox/searchbox.component';\nimport {VehicleServiceHistoryComponent} from './feature-component/vehicle-service-history/vehicle.service.history.component';\nimport {CustomerDetailsComponent} from './feature-component/customer-details/customer.details.component';\nimport {PreferredLocationCCMComponent} from './feature-component/preferred-location/preferred.location';\nimport {ServiceConfirmationCCMComponent} from './feature-component/confirmation/service.confirmation';\nimport {ServiceDetailsService} from './services/service.details.service';\n\nconst COMPONENT: any[] = [\n  AppComponent, RinaHomeComponent, CustomerDetailsComponent,\n  VehicleDetailsComponent, CompanyLogoComponent,\n  SearchBoxComponent, VehicleServiceHistoryComponent,\n  PreferredLocationCCMComponent, ServiceConfirmationCCMComponent\n];\n\n@NgModule({\n  declarations: COMPONENT,\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RinaLibModule,\n    HttpClientModule,\n    FormsModule,\n    AmexioWidgetModule\n  ],\n  providers: [ServiceDetailsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<amexio-row>\\n  <amexio-column [size]=\\\"3\\\">\\n  </amexio-column>\\n  <amexio-column [size]=\\\"6\\\">\\n    <amexio-image\\n      [width]=\\\"'100px'\\\"\\n      [height]=\\\"'120px'\\\"\\n      [path]=\\\"'assets/images/logo.jpg'\\\"\\n      [filter]=\\\"'normal'\\\">\\n    </amexio-image>\\n  </amexio-column>\\n  <amexio-column [size]=\\\"3\\\">\\n\\n  </amexio-column>\\n</amexio-row>\\n\\n<amexio-row>\\n  <amexio-column [size]=\\\"3\\\">\\n    <amexio-floating-button [relative]=\\\"true\\\" [icon]=\\\"'fa fa-volume-control-phone'\\\" [type]=\\\"'theme-color'\\\"></amexio-floating-button>\\n  </amexio-column>\\n  <amexio-column [size]=\\\"3\\\">\\n    <amexio-floating-button [relative]=\\\"true\\\" [icon]=\\\"'fa fa-phone'\\\" [type]=\\\"'green'\\\"></amexio-floating-button>\\n\\n  </amexio-column>\\n\\n  <amexio-column [size]=\\\"3\\\">\\n    <amexio-floating-button [relative]=\\\"true\\\" [icon]=\\\"'fa fa-pause'\\\" [type]=\\\"'yellow'\\\"></amexio-floating-button>\\n\\n  </amexio-column>\\n  <amexio-column [size]=\\\"3\\\">\\n    <amexio-floating-button [relative]=\\\"true\\\" [icon]=\\\"'fa fa-phone-square'\\\" [type]=\\\"'red'\\\"></amexio-floating-button>\\n\\n  </amexio-column>\\n\\n</amexio-row>\\n\"","/**\n * Created by dattaram on 15/1/19.\n */\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n   selector: 'company-logo',\n  templateUrl: './company.logo.component.html'\n})\n\nexport class CompanyLogoComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"<amexio-window class=\\\"serviceconfirmation\\\" [(show)]=\\\"show\\\" type=\\\"window\\\" [header]=\\\"false\\\" [footer]=\\\"false\\\" [closable]=\\\"false\\\">\\n    <amexio-body>\\n        <div class=\\\"adjustbody\\\">\\n            <amexio-label size=\\\"medium-bold\\\">CONFIRMATION</amexio-label>\\n\\n            <amexio-layout-columns *ngIf=\\\"!showConfirmation;else elseblock\\\" [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n                <amexio-layout-item>\\n\\n                    <amexio-row>\\n                        <amexio-column [size]=12>\\n                            <amexio-dropdown [(ngModel)]=\\\"serviceModel.location\\\" [disabled]=\\\"true\\\" [place-holder]=\\\"'Location'\\\" name=\\\"location\\\" [field-label]=\\\"'Location'\\\" [data]=\\\"serviceLocations\\\" [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                    </amexio-row>\\n                    <amexio-row>\\n                        <amexio-column [size]=6>\\n                            <amexio-date-time-picker [field-label]=\\\"'Date'\\\" [disabled]=\\\"true\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" name=\\\"appointmentDate\\\" [(ngModel)]=\\\"serviceModel.appointmentDate\\\">\\n                            </amexio-date-time-picker>\\n                        </amexio-column>\\n                        <amexio-column [size]=6>\\n                            <amexio-dropdown [(ngModel)]=\\\"serviceModel.appointmentTime\\\" [disabled]=\\\"true\\\" (onSingleSelect)=\\\"setTime($event)\\\" [place-holder]=\\\"'Time'\\\" name=\\\"appointmentTime\\\" [field-label]=\\\"'Time'\\\" [data]=\\\"timeSlots\\\" [display-field]=\\\"'time'\\\" [value-field]=\\\"'timeId'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                    </amexio-row>s\\n                    <amexio-row>\\n                        <amexio-column [size]=9>\\n                            <amexio-dropdown [(ngModel)]=\\\"serviceModel.assitantPerson\\\" [disabled]=\\\"true\\\" [place-holder]=\\\"'Service Assistant (SA)'\\\" name=\\\"assitantPerson\\\" [field-label]=\\\"'Service Assistant (SA)'\\\" [data]=\\\"assitantPerson\\\" [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                        <amexio-column [size]=3>\\n                            <amexio-label size=\\\"small-bold\\\" style=\\\"color:green\\\">Available</amexio-label>\\n                        </amexio-column>\\n                    </amexio-row>\\n                    <amexio-row>\\n                        <amexio-column [size]=12>\\n                            <amexio-toolbar>\\n                                <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n                                    <amexio-button [label]=\\\"'Back'\\\" (onClick)=\\\"onBackClick($event)\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Proceed to preferred location'\\\" [size]=\\\"'large'\\\">\\n                                    </amexio-button>\\n                                </amexio-toolbar-item>\\n                                <amexio-toolbar-item position-right>\\n                                    <amexio-button [label]=\\\"'Confirm'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Confirm'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"confirmAppointment($event)\\\">\\n                                    </amexio-button>\\n                                </amexio-toolbar-item>\\n                            </amexio-toolbar>\\n                        </amexio-column>\\n                    </amexio-row>\\n                </amexio-layout-item>\\n            </amexio-layout-columns>\\n\\n            <ng-template #elseblock>\\n                <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n                    <amexio-layout-item>\\n                        <amexio-label size=\\\"medium-bold\\\">Thank You!</amexio-label> <br /><br />\\n                        <amexio-label>Your service has been booked on {{serviceModel.appointmentDate | date:'MMM dd, yyyy'}} at 2PM</amexio-label><br /><br />\\n                        <amexio-label>Service Location:</amexio-label><br />\\n                        <amexio-label>Emirates Motor Company</amexio-label><br />\\n                        <amexio-label>M5, intersection, 17th Street</amexio-label><br />\\n                        <amexio-label>Phone: +91.0987654321</amexio-label><br /><br />\\n                        <amexio-toolbar>\\n                            <amexio-toolbar-item position-right>\\n                                <amexio-button [label]=\\\"'Close'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Close'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"close($event)\\\">\\n                                </amexio-button>\\n                            </amexio-toolbar-item>\\n                        </amexio-toolbar>\\n\\n                    </amexio-layout-item>\\n                </amexio-layout-columns>\\n\\n            </ng-template>\\n        </div>\\n    </amexio-body>\\n</amexio-window>\\n\"","import { PersonalDetails } from 'projects/rina-lib/src/lib/model/shared/personal.details.model';\nimport {Component, Input} from '@angular/core';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\nimport { LocationModel } from 'projects/rina-lib/src/lib/model/shared/location.model';\nimport { ServiceAssistantModel } from 'projects/rina-lib/src/lib/model/shared/serviceassistant.model';\nimport { Output, EventEmitter } from '@angular/core';\nimport { TimeModel, TimeUtil } from 'amexio-ng-extensions';\nimport {ServiceDetailsService} from \"../../services/service.details.service\";\n\n@Component({\n    selector: 'rinaccm-service-confirmation',\n    templateUrl: './service.confirmation.html'\n})\nexport class ServiceConfirmationCCMComponent {\n\n    @Input('show') show = false;\n    @Output() showChange: EventEmitter<any> = new EventEmitter<any>();\n    serviceModel: ServiceAvailibilityModel;\n    serviceLocations: LocationModel [];\n    timeSlots: TimeModel [];\n    assitantPerson: ServiceAssistantModel [];\n    showConfirmation = false;\n    @Output() onPrevious: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor( private _serviceDetailsService: ServiceDetailsService) {\n        this.serviceModel = new ServiceAvailibilityModel();\n        this.serviceLocations = [];\n        this.timeSlots = [];\n        this.assitantPerson = [];\n        this.serviceModel = this._serviceDetailsService.getPeferredLocation();\n        this.loadData();\n    }\n\n    confirmAppointment(personalDetails: PersonalDetails) {\n        this.showConfirmation = true;\n        console.log(this._serviceDetailsService.getPersonalDetails());\n    }\n\n    onBackClick(event: any) {\n      this.onPrevious.emit(event);\n    }\n\n    close(event: any) {\n        this.show = false;\n        this.showChange.emit(this.show);\n    }\n\n    loadData() {\n      this.loadLocations();\n      this.loadAssitants();\n      this.loadWorkingSlots();\n    }\n    loadWorkingSlots() {\n      this.timeSlots = new TimeUtil().workingslot1();\n   }\n    loadAssitants() {\n      let response: any;\n      debugger;\n      this._serviceDetailsService.getAssitantList(this.serviceModel.location).subscribe(\n       res => {\n         response = res;\n       },\n       // tslint:disable-next-line:no-shadowed-variable\n       (error: any) => {\n         console.log('Invalid url');\n       },\n       () => {\n        this.assitantPerson = response;\n       }\n     );\n    }\n    loadLocations() {\n      let response: any;\n      this._serviceDetailsService.getLocations().subscribe(\n       res => {\n         response = res;\n       },\n       // tslint:disable-next-line:no-shadowed-variable\n       (error: any) => {\n         console.log('Invalid url');\n       },\n       () => {\n        this.serviceLocations = response;\n       }\n     );\n    }\n}\n","module.exports = \"\\n<amexio-row>\\n  <amexio-column [size]=\\\"4\\\">\\n    <amexio-image [path]=\\\"customerModel.profileImageUrl\\\"\\n                  [filter]=\\\"'round'\\\">\\n    </amexio-image>\\n   <!-- <amexio-floating-button [relative]=\\\"true\\\" [icon]=\\\"'fa fa-phone'\\\" [type]=\\\"'red'\\\"></amexio-floating-button>\\n\\n    <amexio-image [icon-class]=\\\"'fa fa-phone fa-2x'\\\" ></amexio-image>-->\\n  </amexio-column>\\n  <amexio-column [size]=\\\"8\\\">\\n    <table>\\n      <tr>\\n        <td>Customer ID</td>\\n        <td>: {{customerModel.customerId}}</td>\\n      </tr>\\n      <tr>\\n        <td>Mobile #</td>\\n        <td>: {{customerModel.mobile}}</td>\\n      </tr>\\n      <tr>\\n        <td>Name</td>\\n        <td>: {{customerModel.name}}</td>\\n      </tr>\\n\\n      <tr>\\n        <td>Company Name</td>\\n        <td>: {{customerModel.companyName}}</td>\\n      </tr>\\n      <tr>\\n        <td>Operating Status</td>\\n        <td>: {{customerModel.operatingStatus}}</td>\\n      </tr>\\n      <tr>\\n        <td>Email</td>\\n        <td>: {{customerModel.email}}</td>\\n      </tr>\\n\\n\\n      <tr>\\n        <td>Alt Number</td>\\n        <td>: {{customerModel.altNumber}}</td>\\n      </tr>\\n      <tr>\\n        <td>Birthday</td>\\n        <td>: {{customerModel.birthday}}</td>\\n      </tr>\\n      <tr>\\n        <td>Anniversary</td>\\n        <td>: {{customerModel.anniversary}}</td>\\n      </tr>\\n\\n\\n    </table>\\n  </amexio-column>\\n</amexio-row>\\n\"","/**\n * Created by dattaram on 14/1/19.\n */\nimport {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {CustomerModel} from \"../../models/customer.details.model\";\n\n@Component({\n  selector: 'customer-details',\n  templateUrl: './customer-details.component.html'\n})\n\nexport class CustomerDetailsComponent implements OnInit, OnChanges {\n  @Input('customer-model') customerModel: CustomerModel;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.customerModel) {\n      this.customerModel = changes.customerModel.currentValue;\n    }\n  }\n}\n","module.exports = \"<amexio-window class=\\\"preferredlocation\\\" [(show)]=\\\"showWindow\\\" type=\\\"window\\\" [header]=\\\"false\\\" [footer]=\\\"false\\\" [closable]=\\\"false\\\">\\n    <amexio-body>\\n\\n        <amexio-label size=\\\"medium-bold\\\">PREFERRED LOCATION AND TIME</amexio-label>\\n        <div class=\\\"adjustbody\\\">\\n            <service-availiblity-lib [service-model]=\\\"serviceModel\\\" [start-time]=\\\"10\\\" [end-time]=\\\"15\\\"></service-availiblity-lib>\\n        </div>\\n        <amexio-toolbar>\\n            <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n                <amexio-button [label]=\\\"'Cancel'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Proceed to personal profile'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"backClick($event)\\\">\\n                </amexio-button>\\n            </amexio-toolbar-item>\\n            <amexio-toolbar-item position-right>\\n                <amexio-button [label]=\\\"'Schedule'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Proceed to preferred location'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"scheduleAppointment($event)\\\">\\n                </amexio-button>\\n            </amexio-toolbar-item>\\n        </amexio-toolbar>\\n\\n    </amexio-body>\\n</amexio-window>\\n\"","import { Component, Output, EventEmitter } from '@angular/core';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\n\n@Component({\n    selector: 'rinaccm-preferred-location',\n    templateUrl: './preferred.location.html'\n})\nexport class PreferredLocationCCMComponent {\n\n    showWindow: boolean = true;\n    serviceModel: ServiceAvailibilityModel;\n    @Output() onNext: EventEmitter<any> = new EventEmitter<any>();\n    @Output() onPrevious: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor() {\n        this.serviceModel = new ServiceAvailibilityModel();\n    }\n\n    scheduleAppointment(event: any) {\n        this.onNext.emit(this.serviceModel);\n    }\n\n    backClick(event: any) {\n      this.onPrevious.emit(event);\n    }\n}\n","module.exports = \"<div class=\\\"inputgroup\\\" #rootDiv>\\n  <input\\n    id=\\\"input\\\"\\n    role=\\\"combobox\\\"\\n    name=\\\"searchbox\\\"\\n    [(ngModel)]=\\\"searchId\\\"\\n    type=\\\"text\\\" class=\\\"input-control\\\"\\n    (focus)=\\\"focusHandle($event)\\\"\\n    (blur)=\\\"blurHandle($event)\\\"\\n    [attr.placeholder]=\\\"'search'\\\"/>\\n  <span class=\\\"drodown-caret-down\\\" (click)=\\\"iconHandle()\\\" style=\\\"cursor: pointer\\\">\\n      <i class=\\\"fa fa-search\\\"></i>\\n      </span>\\n  <span #dropdownitems  class=\\\"dropdown\\\"  [ngStyle]=\\\"dropdownstyle\\\">\\n          <ul class=\\\"dropdown-list\\\">\\n            <li (mousedown)=\\\"liClickHandle(item)\\\"  role=\\\"option\\\"  class=\\\"list-items\\\" *ngFor=\\\"let item of dropDownItemList\\\">{{item.key}} <i style=\\\"float: right\\\" [ngClass]=\\\"{'fa fa-check': item.selected}\\\" aria-hidden=\\\"true\\\"></i></li>\\n          </ul>\\n        </span>\\n</div>\\n<br>\\n\"","/**\n * Created by dattaram on 15/1/19.\n */\nimport {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'search-box',\n  templateUrl: './searchbox.component.html'\n})\n\nexport class SearchBoxComponent implements OnInit {\n  dropdownstyle: any;\n  showDropdown = false;\n  dropDownItemList: any[] = [];\n  searchId = null;\n  searchType = 1;\n  @Output() search: EventEmitter<any> =  new EventEmitter<any>();\n  constructor() {\n    this.dropDownItemList = [\n      {\n        'key': 'Customer ID',\n        'id': 1,\n        selected: true\n      },\n      {\n        'key': 'Mobile Number',\n        'id': 2,\n         selected: false\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.showList(this.showDropdown);\n  }\n\n  focusHandle(event: any) {\n    this.showList(true);\n  }\n  iconHandle() {\n    const searchObject = {\n      searchId: parseInt(this.searchId),\n      searchType: this.searchType\n    };\n    this.search.emit(searchObject);\n  }\n  blurHandle(event: any) {\n    this.showList(false);\n  }\n\n  liClickHandle(item: any) {\n    this.dropDownItemList.forEach((obj: any) => {\n      obj.selected = false;\n    });\n    item.selected = true;\n    this.searchType = item.id;\n    this.showList(false);\n  }\n\n  showList(flag: boolean) {\n    this.showDropdown = flag;\n    if (this.showDropdown) {\n      this.dropdownstyle = {visibility: 'visible'};\n    } else {\n      this.dropdownstyle = {visibility: 'hidden'};\n    }\n  }\n}\n","module.exports = \"\\n\\n<amexio-card *ngFor=\\\"let vehicleModel of vehicleDetails\\\"\\n             [header]=\\\"false\\\"\\n             [footer]=\\\"false\\\">\\n    <amexio-body>\\n      <amexio-row >\\n        <amexio-column [size]=\\\"6\\\">\\n          <amexio-image [height]=\\\"'250px'\\\" [path]=\\\"vehicleModel.vehicleImgUrl\\\"></amexio-image><br>\\n          <amexio-label>{{vehicleModel.modelName}}</amexio-label>\\n        </amexio-column>\\n        <amexio-column [size]=\\\"6\\\">\\n          <table>\\n            <tr>\\n              <td>Engine</td>\\n              <td>: {{vehicleModel.engine}}</td>\\n            </tr>\\n            <tr>\\n              <td>Horsepower</td>\\n              <td>: {{vehicleModel.horsepower}}</td>\\n            </tr>\\n            <tr>\\n              <td>Torque rpm</td>\\n              <td>: {{vehicleModel.torque}}</td>\\n            </tr>\\n            <tr>\\n              <td>Acceleration</td>\\n              <td>: {{vehicleModel.acceleration}}</td>\\n            </tr>\\n            <tr>\\n              <td>Top Speed</td>\\n              <td>: {{vehicleModel.topSpeed}}</td>\\n            </tr>\\n            <tr>\\n              <td>Model Year</td>\\n              <td>: {{vehicleModel.modelYear}}</td>\\n            </tr>\\n            <tr>\\n              <td>Registration No</td>\\n              <td>: {{vehicleModel.registrationNo}}</td>\\n            </tr>\\n            <tr>\\n              <td>Date of Purchase</td>\\n              <td>: {{vehicleModel.dateOfPurchase}}</td>\\n            </tr>\\n            <tr>\\n              <td>Purchased from</td>\\n              <td>: {{vehicleModel.purchasedFrom}}</td>\\n            </tr>\\n          </table>\\n        </amexio-column>\\n      </amexio-row>\\n    </amexio-body>\\n</amexio-card>\\n\\n\"","/**\n * Created by dattaram on 15/1/19.\n */\nimport {Component, Input, OnInit} from '@angular/core';\nimport {VehicleDetails} from \"../../models/vehicel.details.model\";\n\n@Component({\n  selector: 'vehicle-details',\n  templateUrl:'./vehicle.details.component.html'\n})\n\nexport class VehicleDetailsComponent implements OnInit {\n @Input('vehicle-details') vehicleDetails: VehicleDetails[];\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"<amexio-card [header]=\\\"false\\\"\\n             [footer]=\\\"false\\\">\\n  <amexio-body>\\n    <table>\\n      <tr>\\n        <td>BU</td>\\n        <td>: {{vehicleModel.bu}}</td>\\n      </tr>\\n      <tr>\\n        <td>Vehicle</td>\\n        <td>: {{vehicleModel.vehicle}}</td>\\n      </tr>\\n      <tr>\\n        <td>Date of Purchase</td>\\n        <td>: {{vehicleModel.dateOfPurchase}}</td>\\n      </tr>\\n\\n      <tr>\\n        <td>Model Year</td>\\n        <td>: {{vehicleModel.modelYear}}</td>\\n      </tr>\\n      <tr>\\n        <td>Registration No</td>\\n        <td>: {{vehicleModel.registrationNo}}</td>\\n      </tr>\\n      <tr>\\n        <td>Customer Class</td>\\n        <td>: {{vehicleModel.customerClass}}</td>\\n      </tr>\\n\\n      <tr>\\n        <td>Preferred Mode of Contact</td>\\n        <td>: {{vehicleModel.preferredModeOfContact}}</td>\\n      </tr>\\n\\n\\n    </table>\\n  </amexio-body>\\n</amexio-card>\\n\"","/**\n * Created by dattaram on 16/1/19.\n */\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'vehicle-service-history',\n  templateUrl: './vehicle.service.history.component.html'\n})\n\nexport class VehicleServiceHistoryComponent implements OnInit {\n\n  @Input('vehicle-model') vehicleModel: any;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by dattaram on 14/1/19.\n */\n/*export class CustomerDetailsInterface {\n  customerId: number;\n  mobile: number ;\n  name: string;\n  companyName: string;\n  operatingStatus: string;\n  email: string;\n  altNumber: number;\n  birthday: string;\n  anniversary: string;\n  profileImageUrl: string;\n  callAttempt: number;\n  bu: string;\n  vehicle: string ;\n  dateOfPurchase: string ;\n  modelYear: string ;\n  registrationNo: string ;\n  customerClass: string;\n  preferredModeOfContact: string ;\n  lastService: string;\n  nextService: string;\n  openSRs: string;\n  vehicleDetails: any[];\n\n}*/\n\nimport {VehicleDetails} from './vehicel.details.model';\nexport class CustomerModel {\n  customerId = null;\n  mobile = null;\n  name = '';\n  companyName =  '';\n  operatingStatus = '';\n  email = '';\n  altNumber = null;\n  birthday = '';\n  anniversary = '';\n  profileImageUrl = '';\n  callAttempt = null;\n  bu = '' ;\n  vehicle = '' ;\n  dateOfPurchase = '' ;\n  modelYear = '' ;\n  registrationNo = '' ;\n  customerClass = '';\n  preferredModeOfContact = '' ;\n  lastService = '';\n  nextService = '';\n  openSRs = '';\n  vehicleDetails: VehicleDetails[] = [];\n  constructor() {\n\n  }\n /* getCustomerModelObject(customerDetails: CustomerDetailsInterface): CustomerModel {\n    const customerModel = new CustomerModel();\n    customerModel.customerId = customerDetails.customerId;\n    customerModel.mobile = customerDetails.mobile;\n    customerModel.name = customerDetails.name;\n    customerModel.companyName = customerDetails.companyName;\n    customerModel.operatingStatus = customerDetails.operatingStatus;\n    customerModel.email = customerDetails.email;\n    customerModel.altNumber = customerDetails.altNumber;\n    customerModel.birthday = customerDetails.birthday;\n    customerModel.anniversary = customerDetails.anniversary;\n    customerModel.profileImageUrl = customerDetails.profileImageUrl;\n    customerModel.callAttempt = customerDetails.callAttempt;\n    customerModel.bu = customerDetails.bu;\n    customerModel.vehicle = customerDetails.vehicle;\n    customerModel.dateOfPurchase = customerDetails.dateOfPurchase;\n    customerModel.modelYear = customerDetails.modelYear;\n    customerModel.registrationNo = customerDetails.registrationNo;\n    customerModel.customerClass = customerDetails.customerClass;\n    customerModel.preferredModeOfContact = customerDetails.preferredModeOfContact;\n    customerModel.lastService = customerDetails.lastService;\n    customerModel.nextService = customerDetails.nextService;\n    customerModel.openSRs = customerDetails.openSRs;\n    customerModel.vehicleDetails = customerDetails.vehicleDetails;\n    return customerModel;\n  }*/\n}\n\n","module.exports = \"<!--  <amexio-spinner [show]=showLoader [type]=\\\"'fadingcircle'\\\" [color]=\\\"'red'\\\" [size]=\\\"'10px'\\\">\\n  </amexio-spinner>-->\\n <amexio-layout-grid [layout]=\\\"'rinahomepage'\\\">\\n   <amexio-grid-item [name]=\\\"'logoposition'\\\">\\n     <company-logo></company-logo>\\n   </amexio-grid-item>\\n   <amexio-grid-item  [name]=\\\"'topslot2'\\\">\\n     <amexio-card [header]=\\\"false\\\"\\n                  [footer]=\\\"false\\\">\\n       <amexio-body>\\n         <customer-details [customer-model]=\\\"customerModel\\\"></customer-details>\\n       </amexio-body>\\n     </amexio-card>\\n   </amexio-grid-item>\\n   <amexio-grid-item  [name]=\\\"'topslot3'\\\">\\n    <vehicle-service-history [vehicle-model]=\\\"customerModel\\\"></vehicle-service-history>\\n   </amexio-grid-item>\\n   <amexio-grid-item  [name]=\\\"'topslot4'\\\">\\n       <amexio-card [header]=\\\"false\\\"\\n                        [footer]=\\\"false\\\">\\n             <amexio-body>\\n               <table>\\n                 <tr>\\n                   <td>Last Service &nbsp;</td>\\n                   <td>: {{customerModel.lastService}}</td>\\n                 </tr>\\n                 <tr>\\n                   <td>Next Service &nbsp;</td>\\n                   <td>: {{customerModel.nextService}}</td>\\n                 </tr>\\n                 <tr>\\n                   <td>Open SRs &nbsp;</td>\\n                   <td>: {{customerModel.openSRs}}</td>\\n                 </tr>\\n               </table>\\n             </amexio-body>\\n           </amexio-card>\\n   </amexio-grid-item>\\n   <amexio-grid-item  [name]=\\\"'guages'\\\">\\n         <amexio-image\\n           [path]=\\\"'assets/images/speed.png'\\\"\\n           [filter]=\\\"'normal'\\\">\\n         </amexio-image>\\n   </amexio-grid-item>\\n\\n   <amexio-grid-item style=\\\"background-color: white\\\"  [name]=\\\"'rinasidemenu'\\\">\\n         <search-box (search)=\\\"getSearchObject($event)\\\"></search-box>\\n         <ng-container *ngFor=\\\"let service of serviceList\\\">\\n           <amexio-button [label]=\\\"service.serviceName\\\"\\n                          [type]=\\\"'theme-color'\\\"\\n                          (onClick)=\\\"openServiceBookingWindow(service)\\\"\\n                          [tooltip]=\\\"'large'\\\"\\n                          [block]=\\\"true\\\">\\n           </amexio-button><br>\\n         </ng-container>\\n   </amexio-grid-item>\\n   <amexio-grid-item  [name]=\\\"'rinasidecenter'\\\">\\n     <amexio-layout-columns style=\\\"background-color: white\\\" [fit]=\\\"true\\\" [border]=\\\"false\\\" [orientation]=\\\"'vertical'\\\" [alignment]=\\\"'space-between'\\\">\\n       <amexio-layout-item [padding]=\\\"false\\\" [fit]=\\\"true\\\">\\n         <amexio-tab-view #tab  [closable]=\\\"false\\\" [body-height]=\\\"47\\\" >\\n           <amexio-tab title=\\\"VEHICLE DETAILS\\\" [active]=\\\"true\\\">\\n             <ng-container *ngIf=\\\"customerModel.vehicleDetails\\\">\\n               <vehicle-details [vehicle-details]=\\\"customerModel.vehicleDetails\\\"></vehicle-details>\\n             </ng-container>\\n           </amexio-tab>\\n           <amexio-tab title=\\\"BOOKING DETAILS\\\">\\n             <amexio-datagrid  [http-method]=\\\"'get'\\\"\\n                               [http-url]=\\\"'assets/bookingdata.json'\\\" [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n\\n               <amexio-data-table-column [data-index]=\\\"'bookingId'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Booking Id'\\\">\\n               </amexio-data-table-column>\\n               <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'bookingDate'\\\" [data-type]=\\\"'string'\\\"\\n                                         [text]=\\\"'Booking Date'\\\"></amexio-data-table-column>\\n               <amexio-data-table-column [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Name'\\\">\\n\\n               </amexio-data-table-column>\\n             </amexio-datagrid>\\n           </amexio-tab>\\n           <amexio-tab title=\\\"SERVICE HISTORY\\\">\\n             <amexio-datagrid  [http-method]=\\\"'get'\\\"\\n                               [http-url]=\\\"'assets/servicedata.json'\\\" [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n\\n               <amexio-data-table-column [data-index]=\\\"'serviceId'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Service Id'\\\">\\n               </amexio-data-table-column>\\n               <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'serviceDate'\\\" [data-type]=\\\"'string'\\\"\\n                                         [text]=\\\"'Service Date'\\\"></amexio-data-table-column>\\n               <amexio-data-table-column [data-index]=\\\"'vehicle'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Vehicle'\\\">\\n\\n               </amexio-data-table-column>\\n             </amexio-datagrid>\\n           </amexio-tab>\\n           <amexio-tab title=\\\"INTERACTION HISTORY\\\">\\n             <amexio-datagrid  [http-method]=\\\"'get'\\\"\\n                               [http-url]=\\\"'assets/interaction.json'\\\" [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n\\n               <amexio-data-table-column [data-index]=\\\"'interactionDate'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Interaction Date'\\\">\\n               </amexio-data-table-column>\\n               <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'name'\\\" [data-type]=\\\"'string'\\\"\\n                                         [text]=\\\"'Name'\\\"></amexio-data-table-column>\\n             </amexio-datagrid>\\n           </amexio-tab>\\n           <amexio-tab title=\\\"RIGHT SELL\\\">\\n             <amexio-datagrid  [http-method]=\\\"'get'\\\"\\n                               [http-url]=\\\"'assets/dummygrid.json'\\\" [data-reader]=\\\"'data'\\\" [page-size]=\\\"10\\\">\\n\\n               <amexio-data-table-column [data-index]=\\\"'awaitingDetails'\\\" [data-type]=\\\"'string'\\\" [text]=\\\"'Awaiting Details'\\\">\\n               </amexio-data-table-column>\\n               <amexio-data-table-column [sort]=\\\"false\\\" [data-index]=\\\"'awaitingDetails'\\\" [data-type]=\\\"'string'\\\"\\n                                         [text]=\\\"'Awaiting Details'\\\"></amexio-data-table-column>\\n               <amexio-data-table-column [data-index]=\\\"'awaitingDetails'\\\" [data-type]=\\\"'string'\\\" [hidden]=\\\"false\\\" [text]=\\\"'Awaiting Details'\\\">\\n\\n               </amexio-data-table-column>\\n             </amexio-datagrid>\\n           </amexio-tab>\\n         </amexio-tab-view>\\n\\n       </amexio-layout-item>\\n       <amexio-layout-item [padding]=\\\"false\\\">\\n         <amexio-checkbox-group\\n           [data-reader]=\\\"'data'\\\"\\n           [display-field]=\\\"'serviceType'\\\"\\n           [value-field]=\\\"'serviceType'\\\"\\n           [horizontal]=\\\"true\\\"\\n           [http-method]=\\\"'get'\\\"\\n           [http-url]=\\\"'assets/serviceType.json'\\\">\\n         </amexio-checkbox-group>\\n\\n         <amexio-layout-columns [fit]=\\\"true\\\" [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n           <amexio-layout-item [fit]=\\\"true\\\" >\\n             <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n               <amexio-layout-item >\\n             <amexio-text-input\\n               place-holder=\\\"Call Remark\\\"\\n               [allow-blank]=\\\"true\\\"\\n               has-label=\\\"false\\\">\\n             </amexio-text-input>\\n               </amexio-layout-item>\\n             </amexio-layout-columns>\\n           </amexio-layout-item>\\n           <amexio-layout-item  >\\n             <amexio-layout-columns [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'end'\\\">\\n               <amexio-layout-item >\\n               <amexio-button [size]=\\\"'medium'\\\" [label]=\\\"'Submit'\\\" [type]=\\\"'theme-color'\\\"  [tooltip]=\\\"'submit'\\\">\\n           </amexio-button>\\n               </amexio-layout-item>\\n             </amexio-layout-columns>\\n           </amexio-layout-item>\\n         </amexio-layout-columns>\\n       </amexio-layout-item>\\n     </amexio-layout-columns>\\n   </amexio-grid-item>\\n   <amexio-grid-item style=\\\"background-color: white\\\"  [name]=\\\"'rinasidesearch'\\\">\\n         <amexio-dropdown\\n           [place-holder]=\\\"'Select Script'\\\"\\n           [display-field]=\\\"'scriptName'\\\"\\n           [data-reader]=\\\"'data'\\\"\\n           [value-field]=\\\"'scriptUrl'\\\"\\n           [http-method]=\\\"'get'\\\"\\n           [http-url]=\\\"'assets/script.json'\\\"\\n           [enable-sort]=\\\"true\\\"\\n           [sort]=\\\"'asc'\\\">\\n         </amexio-dropdown>\\n   </amexio-grid-item>\\n </amexio-layout-grid>\\n <rinaccm-preferred-location *ngIf=\\\"showLocationWindow\\\" (onNext)=\\\"scheduleAppointment($event)\\\" (onPrevious)=\\\"onPrevious($event)\\\"></rinaccm-preferred-location>\\n <rinaccm-service-confirmation *ngIf=\\\"showConformationWindow\\\" [(show)]=\\\"showConformationWindow\\\" (onPrevious)=\\\"onServiceConfirmPrevious($event)\\\"></rinaccm-service-confirmation>\\n\\n <amexio-dialogue [(show)]=\\\"warningdialogue\\\"\\n                  [material-design]=\\\"true\\\"\\n                  [message]=\\\"warningMsg\\\"\\n                  [title]=\\\"'Warning'\\\"\\n                  [message-type]=\\\"'warning'\\\"\\n                  [type]=\\\"'alert'\\\">\\n </amexio-dialogue>\\n\"","/**\n * Created by dattaram on 14/1/19.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {GridConfig, AmexioGridLayoutService, GridConstants} from 'amexio-ng-extensions';\nimport { CustomerModel} from '../models/customer.details.model';\nimport {ServiceAvailibilityModel} from '../../../../rina-lib/src/lib/model/service.availiblity.model';\nimport {ServiceDetailsService} from '../services/service.details.service';\nimport {HttpService} from '../../../../rina-lib/src/lib/services/shared/http.service';\nimport {HttpClient} from '@angular/common/http';\n\nconst customerDetailsUrl = 'assets/customerDetails.json';\n\n/* http://localhost:8080/api/customerDetails/findById/ */\n\n\n@Component({\n  selector: 'rina-home',\n  templateUrl: 'rina-home.component.html'\n})\n\nexport class RinaHomeComponent implements OnInit {\n  rinaHomeDesktopLayout: GridConfig;\n  customerModel: CustomerModel;\n  serviceList: any[] = [];\n  showLocationWindow = false;\n  showConformationWindow = false;\n  warningdialogue = false;\n  warningMsg = '';\n  showLoader = false;\n  constructor(private _httpService: HttpService,\n              private  _http: HttpClient,\n              private _serviceDetailsService: ServiceDetailsService,\n              private _gridlayoutService: AmexioGridLayoutService) {\n    this.customerModel = new CustomerModel();\n    this.createLayouts();\n    this._gridlayoutService.createLayout(this.rinaHomeDesktopLayout);\n  }\n\n  ngOnInit() {\n    this.getServiceList();\n    this.getCustomerDetails();\n\n  }\n\n\n  getServiceList() {\n    this._httpService.fetch('assets/serviceList.json', 'get').subscribe(\n      (res: any) => {\n        this.serviceList = res.data;\n      }\n    );\n  }\n\n  getCustomerDetails() {\n    this._httpService.fetch(customerDetailsUrl, 'get').subscribe(\n      (res: any) => {\n        this.customerModel = <CustomerModel>res.response.customerDetails;\n      }\n    );\n  }\n\n  createLayouts() {\n    this.rinaHomeDesktopLayout = new GridConfig('rinahomepage', GridConstants.Desktop)\n      .addlayout(['logoposition', 'topslot2', 'topslot3', 'topslot4', 'guages'])\n      .addlayout(['rinasidemenu', 'rinasidecenter', 'rinasidecenter', 'rinasidecenter', 'rinasidesearch']);\n\n  }\n\n  openServiceBookingWindow(service: any) {\n    if (service.serviceName === 'SERVICE BOOKING') {\n      this.showLocationWindow = true;\n    }\n  }\n\n  onPrevious(event: any) {\n    this.showLocationWindow = false;\n  }\n\n  scheduleAppointment(serviceModel: ServiceAvailibilityModel) {\n    this._serviceDetailsService.setPeferredLocation(serviceModel);\n    this.showLocationWindow = false;\n    this.showConformationWindow = true;\n  }\n\n  onServiceConfirmPrevious() {\n    this.showConformationWindow = false;\n    this.showLocationWindow = true;\n  }\n\n  getSearchObject(searchObject: any) {\n    this.showLoader = true;\n    this._httpService.post('https://restapi.amexio.org:8991/alfahim/api/customerdetails/findById', 'post', searchObject).subscribe(\n      (res: any) => {\n        if (res.success) {\n          this.showLoader = false;\n          this.customerModel = <CustomerModel>res.response;\n        } else {\n          this.showLoader = false;\n          this.warningMsg = res.errorMessage;\n          this.warningdialogue = true;\n          this.customerModel = new CustomerModel();\n        }\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PersonalDetails } from 'projects/rina-lib/src/lib/model/shared/personal.details.model';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\nimport {HttpService} from '../../../../rina-lib/src/lib/services/shared/http.service';\n\nconst SERVICE_URL = {\n  BASE_APP_URL : 'https://restapi.amexio.org:8991/alfahim/api/'\n};\n\n@Injectable()\nexport class ServiceDetailsService {\n  personalDetails: PersonalDetails;\n  serviceAvailibilityModel: ServiceAvailibilityModel;\n  constructor(private _httpService: HttpService) {\n\n  }\n\n   public getTitles(): any {\n   return this._httpService.fetch(SERVICE_URL.BASE_APP_URL + 'title/findall', 'get');\n   }\n   public getVehicles(): any {\n    return this._httpService.fetch(SERVICE_URL.BASE_APP_URL + 'vehicle/findall', 'get');\n   }\n   public getVehicleModels(): any {\n    return this._httpService.fetch(SERVICE_URL.BASE_APP_URL + 'vehiclemodel/findall', 'get');\n   }\n   public getLocations(): any {\n    return this._httpService.fetch(SERVICE_URL.BASE_APP_URL + 'map/findall', 'get');\n   }\n   public getAssitantList(id: string): any {\n    return this._httpService.fetch(SERVICE_URL.BASE_APP_URL + 'serviceassitant/findall/' + id, 'get');\n   }\n   public getPersonalDetails(): PersonalDetails {\n    return this.personalDetails;\n   }\n   public setPersonalDetails(personalDetails: PersonalDetails) {\n     this.personalDetails = personalDetails;\n   }\n\n   public setPeferredLocation(serviceAvailibilityModel: ServiceAvailibilityModel) {\n    this.serviceAvailibilityModel = serviceAvailibilityModel;\n   }\n\n   public getPeferredLocation(): ServiceAvailibilityModel {\n   return this.serviceAvailibilityModel;\n   }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}