{"version":3,"sources":["webpack:////home/sagar/sagar/UI_Work/poc/gic-rina/src/app/app-routing.module.ts","webpack:///../rina-lib/src/lib/components/service-booking/service.availiblity-lib.component.html","webpack:///../rina-lib/src/lib/components/service-booking/service.availiblity-lib.component.ts","webpack:///../rina-lib/src/lib/model/service.availiblity.model.ts","webpack:///../rina-lib/src/lib/model/shared/daterange.model.ts","webpack:///../rina-lib/src/lib/model/shared/personal.details.model.ts","webpack:///../rina-lib/src/lib/rina-lib.components.ts","webpack:///../rina-lib/src/lib/rina-lib.module.ts","webpack:///../rina-lib/src/lib/services/bookingavailable/service.booking.service.ts","webpack:///../rina-lib/src/lib/services/personal.details.service.ts","webpack:///../rina-lib/src/lib/services/service.constant.ts","webpack:///../rina-lib/src/lib/services/servicebooking/service.booking.service.ts","webpack:///../rina-lib/src/lib/services/shared/common.service.ts","webpack:///../rina-lib/src/lib/services/shared/http.service.ts","webpack:///../rina-lib/src/lib/services/window.toggle.service.ts","webpack:///../rina-lib/src/public_api.ts","webpack:///../rinaccm/src/app/models/customer.details.model.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/confirmation/service.confirmation.html","webpack:///./src/app/confirmation/service.confirmation.ts","webpack:///./src/app/personaldetails/personal.detail.ts","webpack:///./src/app/personaldetails/personal.details.html","webpack:///./src/app/preferred-location/preferred.location.html","webpack:///./src/app/preferred-location/preferred.location.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<amexio-layout-columns [orientation]=\\\"'horizontal'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n    <amexio-layout-item>\\n        <amexio-row>\\n            <amexio-column [size]=12>\\n                <amexio-dropdown [(ngModel)]=\\\"serviceModel.location\\\" [place-holder]=\\\"'Select Location'\\\" name=\\\"location\\\" [field-label]=\\\"'Select Location'\\\" [data]=\\\"serviceLocations\\\" [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\" (onSingleSelect)=\\\"onLocationClick($event)\\\">\\n                </amexio-dropdown>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=9>\\n                <amexio-date-time-picker [field-label]=\\\"'Select Date'\\\" [min-date]=\\\"minDate\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" name=\\\"appointmentDate\\\" [min-date]=\\\"todayDate\\\" [(ngModel)]=\\\"serviceModel.appointmentDate\\\">\\n                </amexio-date-time-picker>\\n            </amexio-column>\\n            <amexio-column [size]=3>\\n                <amexio-dropdown [(ngModel)]=\\\"serviceModel.appointmentTime\\\" (onSingleSelect)=\\\"setTime($event)\\\" [place-holder]=\\\"'Select Time'\\\" name=\\\"appointmentTime\\\" [field-label]=\\\"'Select time'\\\" [data]=\\\"timeSlots\\\" [display-field]=\\\"'time'\\\" [value-field]=\\\"'timeId'\\\">\\n                </amexio-dropdown>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=12>\\n                <amexio-dropdown [(ngModel)]=\\\"serviceModel.assitantPerson\\\" [place-holder]=\\\"'Select SA'\\\" name=\\\"assitantPerson\\\" [field-label]=\\\"'Service Assistant (SA)'\\\" [data]=\\\"assitantPerson\\\" [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\">\\n                </amexio-dropdown>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=12>\\n                <amexio-button [label]=\\\"'CHECK SA AVAILIBLITY'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'CHECK SA AVAILIBLITY'\\\" (onClick)=\\\"checkAvailiblity()\\\"></amexio-button>\\n            </amexio-column>\\n        </amexio-row>\\n        <amexio-row>\\n            <amexio-column [size]=12>\\n                <amexio-ee-appointment [height]=\\\"'200px'\\\" [date]=\\\"serviceModel.appointmentDate\\\" [start-time]=\\\"serviceModel.appointmentTime\\\" [end-time]=\\\"endTime\\\" [available-slots]=\\\"availableslots\\\" (onSelection)=\\\"onSelection($event)\\\"></amexio-ee-appointment>\\n            </amexio-column>\\n        </amexio-row>\\n\\n    </amexio-layout-item>\\n    <amexio-layout-item [fit]=\\\"true\\\">\\n        <amexio-google-map [initial-zoom-level]=\\\"2\\\" [height]=\\\"'100%'\\\" [data]=\\\"serviceStations\\\" (onMarkerClick)=\\\"onMarkerClick($event)\\\" [google-map-key]=\\\"'AIzaSyDKSPX97z-ndeh_Mgq3xkaML2Kp9AwHA9s'\\\">\\n        </amexio-google-map>\\n    </amexio-layout-item>\\n</amexio-layout-columns>\"","import { BookingAvailableService } from './../../services/bookingavailable/service.booking.service';\n\nimport {Component, OnInit, Input} from '@angular/core';\nimport { GoogleMapOverlays } from 'amexio-ng-extensions';\n\nimport { ServiceBookingService } from '../../services/servicebooking/service.booking.service';\nimport { ServiceAvailibilityModel } from '../../model/service.availiblity.model';\nimport { LocationModel } from '../../model/shared/location.model';\nimport { CommonService } from '../../services/shared/common.service';\nimport { TimeModel } from 'amexio-ng-extensions';\nimport { ServiceAssistantModel } from '../../model/shared/serviceassistant.model';\nimport { AvailableSlotsModel } from 'amexio-ng-extensions';\nimport { DatePipe } from '@angular/common';\nimport { DateRangeModel } from 'projects/rina-lib/src/lib/model/shared/daterange.model';\n\n@Component({\n    selector: 'service-availiblity-lib',\n    templateUrl : './service.availiblity-lib.component.html'\n})\nexport class ServiceAvailiblityComponent implements OnInit {\n\n    serviceStations: GoogleMapOverlays[];\n    serviceLocations: LocationModel [];\n    timeSlots: TimeModel [];\n    assitantPerson: ServiceAssistantModel [];\n    availableslots: AvailableSlotsModel[];\n\n    @Input('start-time') startTime: number = 10;\n\n    @Input('end-time') endTime: number = 12;\n\n    @Input('service-model') serviceModel: ServiceAvailibilityModel;\n\n    @Input('is-edit-mode') isEditModel: boolean;\n\n    minDate: any;\n\n    isAvailable: boolean;\n\n    dateRangeModel: DateRangeModel;\n\n    constructor(private sbService: ServiceBookingService, private commonService: CommonService,\n       private bookingAvailableService: BookingAvailableService) {\n       this.serviceStations = [];\n       this.assitantPerson = [];\n       this.availableslots = [];\n       this.serviceModel = new ServiceAvailibilityModel();\n       this.minDate = new DatePipe('en-US').transform(new Date(), 'dd-MMM-yyyy');\n       this.dateRangeModel = new DateRangeModel();\n      }\n\n    checkAvailiblity() {\n        let response: any;\n        this.availableslots = [];\n\n\n        this.dateRangeModel.inDate = this.serviceModel.appointmentDate;\n        this.dateRangeModel.locationid = this.serviceModel.location;\n        this.bookingAvailableService.getAllAvailabelSlots(this.dateRangeModel).subscribe((resp: any) => {\n          response = resp;\n        },\n        (error: any) => {\n        },\n        () => {\n           if (response) {\n            this.availableslots = [];\n            response.forEach((element: any) => {\n              this.availableslots.push(new AvailableSlotsModel(new Date(element.datetime), element.data));\n            });\n           }\n        });\n    }\n\n    ngOnInit() {\n        this.initLocation();\n        this.initTime();\n    }\n\n    onSelection(event: any) {\n    }\n\n    private initLocation(): void {\n\n        let response: any;\n        this.sbService.fetchLocations().subscribe((resp: any) => {\n            response = resp;\n        },\n        (error: any) => {\n        },\n        () => {\n            this.serviceLocations = response;\n            this.serviceStations = [];\n            this.serviceLocations.forEach((element: any) => {\n              if (element) {\n               this.serviceStations.push(new GoogleMapOverlays(Number(element.latitude),Number(element.longitude), element.locationName +'UAE',true,null,{country:'United Arab Emirates', capital:'Abu Dhabi',locationId:element.locationUUID}));\n              }\n            });\n            console.log(this.serviceStations);\n        });\n\n    }\n\n    private initSA(id: string): void {\n        let response: any;\n        this.sbService.fetchSABasedOnLocation(id).subscribe((resp: any) => {\n            response = resp;\n        },\n        (error: any) => {\n        },\n        () => {\n            this.assitantPerson = response;\n        });\n    }\n\n    private initTime(): void {\n        this.timeSlots = this.commonService.workingSlot1();\n        if (this.timeSlots && this.timeSlots.length > 0) {\n         this.endTime = this.timeSlots.pop().timeId;\n        }\n    }\n\n    setTime(event: any) {\n\n    }\n\n    onMarkerClick(serviceStation: any) {\n      if (serviceStation.locationId) {\n        this.serviceModel.location = serviceStation.locationId;\n        this.initSA(this.serviceModel.location);\n      }\n\n    }\n\n    onLocationClick(data:any) {\n      this.initSA(data.primaryKey);\n    }\n}\n","export class ServiceAvailibilityModel {\n    location: string;\n    appointmentDate: Date = new Date();\n    appointmentTime: number = 10;\n    assitantPerson: string;\n}\n","export class DateRangeModel {\n  inDate: any;\n  outDate: any;\n  locationid: string;\n}\n","export class PersonalDetails {\n title: string;\n firstName: string;\n surname: string;\n email: string;\n phone: string;\n perferredContact: string;\n vehicleType: string;\n modelYear: string;\n presentKm: string;\n registrationNumber: string;\n constructor() {\n   this.perferredContact = '1';\n }\n\n}\n","import { ServiceAvailiblityComponent } from './components/service-booking/service.availiblity-lib.component';\n\nexport const RINA_COMPONENTS: any[] = [\n  ServiceAvailiblityComponent,\n];\n","import { NgModule } from '@angular/core';\nimport { RINA_COMPONENTS } from './rina-lib.components';\nimport { HttpService } from './services/shared/http.service';\nimport { FormsModule } from '@angular/forms';\nimport { AmexioWidgetModule, AmexioEnterpriseModule } from 'amexio-ng-extensions';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceBookingService } from './services/servicebooking/service.booking.service';\nimport { CommonService } from './services/shared/common.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: RINA_COMPONENTS,\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AmexioWidgetModule,\n    AmexioEnterpriseModule,\n    ReactiveFormsModule\n  ],\n  providers: [HttpService, ServiceBookingService, CommonService],\n  exports: RINA_COMPONENTS\n})\nexport class RinaLibModule { }\n","import { DateRangeModel } from './../../model/shared/daterange.model';\nimport { Injectable } from \"@angular/core\";\nimport { HttpService } from \"../shared/http.service\";\nimport { environment } from 'src/environments/environment';\nimport { SERVICE_URL } from './../service.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingAvailableService {\n\n    constructor(private http: HttpService) {\n\n    }\n    getAllAvailabelSlots(dateRangeModel: DateRangeModel ) {\n        return this.http.post(SERVICE_URL.BASE_APP_URL + 'assistant/available', 'post', dateRangeModel);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SERVICE_URL } from './service.constant';\nimport { PersonalDetails } from 'projects/rina-lib/src/lib/model/shared/personal.details.model';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\n@Injectable()\nexport class PersonalDetailsService {\n  personalDetails: PersonalDetails;\n  serviceAvailibilityModel: ServiceAvailibilityModel;\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n   public getTitles(): any {\n   return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'title/');\n   }\n   public getVehicles(): any {\n    return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'vehicle/');\n   }\n   public getVehicleModels(): any {\n    return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'vehiclemodel/');\n   }\n   public getLocations(): any {\n    return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'map/');\n   }\n   public getAssitantList(id: string): any {\n    return this.httpClient.get(SERVICE_URL.BASE_APP_URL + 'serviceassitant/' + id);\n   }\n   public getPersonalDetails(): PersonalDetails {\n    return this.personalDetails;\n   }\n   public setPersonalDetails(personalDetails: PersonalDetails) {\n     this.personalDetails = personalDetails;\n   }\n\n   public setPeferredLocation(serviceAvailibilityModel: ServiceAvailibilityModel) {\n    this.serviceAvailibilityModel = serviceAvailibilityModel;\n   }\n\n   public getPeferredLocation(): ServiceAvailibilityModel {\n   return this.serviceAvailibilityModel;\n   }\n}\n","export const SERVICE_URL = {\n\tBASE_APP_URL : 'https://restapi.amexio.org:8991/alfahim/api/'\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"../shared/http.service\";\nimport { SERVICE_URL } from './../service.constant';\n\n@Injectable()\nexport class ServiceBookingService {\n\n    constructor(private http: HttpService) {\n\n    }\n\n    fetchLocations() {\n        return this.http.fetch(SERVICE_URL.BASE_APP_URL + 'map/', 'get');\n    }\n\n    fetchSABasedOnLocation(locationId: string) {\n        return this.http.fetch(SERVICE_URL.BASE_APP_URL + 'serviceassitant/' + locationId, 'get');\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"../shared/http.service\";\nimport { TimeModel, TimeUtil } from \"amexio-ng-extensions\";\n\n@Injectable()\nexport class CommonService {\n\n    timeData() : TimeModel [] {\n       return new TimeUtil().timeData(false);\n    }\n\n    workingSlot1() : TimeModel [] {\n        return new TimeUtil().workingslot1();\n     }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/index';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    fetch(serviceUrl: string, methodType: string): Observable<any> {\n        const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n        if (methodType === 'post') {\n          debugger;\n            return this.http.post(serviceUrl, { headers });\n        } else if (methodType === 'get') {\n            return this.http.get(serviceUrl, { headers });\n        }\n    }\n\n\n    post(serviceUrl: string, methodType: string, requestJson: any): Observable<any> {\n\n        const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n        if (methodType === 'post') {\n            return this.http.post(serviceUrl, requestJson, { headers });\n        } else if (methodType === 'get') {\n            return this.http.get(serviceUrl, { headers });\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n@Injectable()\nexport class WindowToogleService {\n\n  widdownMap: Map<number, number>;\nconstructor() {\n this.addWindowMap();\n}\n\ngetNextWindow(windowNumber: number): number {\n  return this.widdownMap.get(windowNumber + 1);\n}\ngetPreviousWindow(windowNumber: number): number {\n  return this.widdownMap.get(windowNumber - 1);\n}\n\naddWindowMap() {\n  this.widdownMap = new Map();\n  this.widdownMap.set(1, 1);\n  this.widdownMap.set(2, 2);\n  this.widdownMap.set(3, 3);\n}\n}\n\nexport class WindowDetails {\n  windowNumber: number;\n  windowName: string;\n\n}\n\n","/*\n * Public API Surface of rina-lib\n */\n\nexport * from './lib/rina-lib.module';\nexport * from './lib/components/service-booking/service.availiblity-lib.component';\nexport * from './lib/model/service.availiblity.model';\nexport * from '../../rinaccm/src/app/models/customer.details.model';\n","/**\n * Created by dattaram on 14/1/19.\n */\n/*export class CustomerDetailsInterface {\n  customerId: number;\n  mobile: number ;\n  name: string;\n  companyName: string;\n  operatingStatus: string;\n  email: string;\n  altNumber: number;\n  birthday: string;\n  anniversary: string;\n  profileImageUrl: string;\n  callAttempt: number;\n  bu: string;\n  vehicle: string ;\n  dateOfPurchase: string ;\n  modelYear: string ;\n  registrationNo: string ;\n  customerClass: string;\n  preferredModeOfContact: string ;\n  lastService: string;\n  nextService: string;\n  openSRs: string;\n  vehicleDetails: any[];\n\n}*/\n\nimport {VehicleDetails} from './vehicel.details.model';\nexport class CustomerModel {\n  customerId = null;\n  mobile = null;\n  name = '';\n  companyName =  '';\n  operatingStatus = '';\n  email = '';\n  altNumber = null;\n  birthday = '';\n  anniversary = '';\n  profileImageUrl = '';\n  callAttempt = null;\n  bu = '' ;\n  vehicle = '' ;\n  dateOfPurchase = '' ;\n  modelYear = '' ;\n  registrationNo = '' ;\n  customerClass = '';\n  preferredModeOfContact = '' ;\n  lastService = '';\n  nextService = '';\n  openSRs = '';\n  vehicleDetails: VehicleDetails[] = [];\n  constructor() {\n\n  }\n /* getCustomerModelObject(customerDetails: CustomerDetailsInterface): CustomerModel {\n    const customerModel = new CustomerModel();\n    customerModel.customerId = customerDetails.customerId;\n    customerModel.mobile = customerDetails.mobile;\n    customerModel.name = customerDetails.name;\n    customerModel.companyName = customerDetails.companyName;\n    customerModel.operatingStatus = customerDetails.operatingStatus;\n    customerModel.email = customerDetails.email;\n    customerModel.altNumber = customerDetails.altNumber;\n    customerModel.birthday = customerDetails.birthday;\n    customerModel.anniversary = customerDetails.anniversary;\n    customerModel.profileImageUrl = customerDetails.profileImageUrl;\n    customerModel.callAttempt = customerDetails.callAttempt;\n    customerModel.bu = customerDetails.bu;\n    customerModel.vehicle = customerDetails.vehicle;\n    customerModel.dateOfPurchase = customerDetails.dateOfPurchase;\n    customerModel.modelYear = customerDetails.modelYear;\n    customerModel.registrationNo = customerDetails.registrationNo;\n    customerModel.customerClass = customerDetails.customerClass;\n    customerModel.preferredModeOfContact = customerDetails.preferredModeOfContact;\n    customerModel.lastService = customerDetails.lastService;\n    customerModel.nextService = customerDetails.nextService;\n    customerModel.openSRs = customerDetails.openSRs;\n    customerModel.vehicleDetails = customerDetails.vehicleDetails;\n    return customerModel;\n  }*/\n}\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hbGZhaGltL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<amexio-floating-button [vertical-position]=\\\"'bottom'\\\" [horizontal-position]=\\\"'right'\\\" (onClick)=\\\"onClick()\\\" [label]=\\\"'Book Service'\\\" [icon]=\\\"'fa fa-car'\\\" [type]=\\\"'theme-color'\\\">\\n</amexio-floating-button>\\n\\n<personal-details *ngIf=\\\"(currentstep === 1)\\\" (onNext)=\\\"proceedToPreferredLocation($event)\\\" (onClose)=\\\"onCloseClick($event)\\\"></personal-details>\\n<alfahim-preferred-location *ngIf=\\\"(currentstep === 2)\\\" (onNext)=\\\"scheduleAppointment($event)\\\" (onPrevious)=\\\"onPrevious($event)\\\"></alfahim-preferred-location>\\n<service-confirmation *ngIf=\\\"(currentstep === 3)\\\" (onPrevious)=\\\"onServiceConfirmPrevious($event)\\\">\\n</service-confirmation>\"","import { PersonalDetailsService } from 'projects/rina-lib/src/lib/services/personal.details.service';\nimport { Component } from '@angular/core';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\nimport { WindowToogleService } from 'projects/rina-lib/src/lib/services/window.toggle.service';\nimport { PersonalDetails } from 'projects/rina-lib/src/lib/model/shared/personal.details.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  serviceModel: ServiceAvailibilityModel;\n  currentstep: number;\n\n  constructor(private windowTService: WindowToogleService, private personalDetailsService: PersonalDetailsService) {\n    this.serviceModel = new ServiceAvailibilityModel();\n  }\n\n  onClick() {\n    this.currentstep = this.windowTService.getNextWindow(0);\n  }\n\n  proceedToPreferredLocation(personalDetails: PersonalDetails) {\n    this.currentstep = this.windowTService.getNextWindow(1);\n  }\n  scheduleAppointment(serviceModel: ServiceAvailibilityModel) {\n    this.personalDetailsService.setPeferredLocation(serviceModel);\n    this.currentstep = this.windowTService.getNextWindow(2);\n  }\n\n  onPrevious(event: any) {\n    this.currentstep = this.windowTService.getPreviousWindow(2);\n  }\n\n  onServiceConfirmPrevious(event: any) {\n    this.currentstep = this.windowTService.getPreviousWindow(3);\n  }\n  onCloseClick(event: any) {\n    debugger;\n    this.currentstep = -1;\n  }\n}\n","import { PersonalDetailsComponent } from './personaldetails/personal.detail';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { RinaLibModule } from 'projects/rina-lib/src/public_api';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { AmexioWidgetModule, AmexioEnterpriseModule } from 'amexio-ng-extensions';\nimport { PreferredLocationComponent } from './preferred-location/preferred.location';\nimport { ServiceConfirmationComponent } from './confirmation/service.confirmation';\nimport { WindowToogleService } from 'projects/rina-lib/src/lib/services/window.toggle.service';\nimport { PersonalDetailsService } from 'projects/rina-lib/src/lib/services/personal.details.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PersonalDetailsComponent,\n    PreferredLocationComponent,\n    ServiceConfirmationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    RinaLibModule,\n    AppRoutingModule,\n    AmexioWidgetModule,\n    AmexioEnterpriseModule,\n    HttpClientModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [WindowToogleService, PersonalDetailsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<amexio-window class=\\\"serviceconfirmation\\\" [(show)]=\\\"showWindow\\\" type=\\\"window\\\" [header]=\\\"false\\\" [footer]=\\\"false\\\" [closable]=\\\"false\\\">\\n    <amexio-body>\\n        <div class=\\\"adjustbody\\\">\\n            <amexio-label size=\\\"medium-bold\\\">CONFIRMATION</amexio-label>\\n\\n            <amexio-layout-columns *ngIf=\\\"!showConfirmation;else elseblock\\\" [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n                <amexio-layout-item>\\n\\n                    <amexio-row>\\n                        <amexio-column [size]=12>\\n                            <amexio-dropdown [(ngModel)]=\\\"serviceModel.location\\\" [disabled]=\\\"true\\\" [place-holder]=\\\"'Location'\\\" name=\\\"location\\\" [field-label]=\\\"'Location'\\\" [data]=\\\"serviceLocations\\\" [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                    </amexio-row>\\n                    <amexio-row>\\n                        <amexio-column [size]=6>\\n                            <amexio-date-time-picker [field-label]=\\\"'Date'\\\" [disabled]=\\\"true\\\" [time-picker]=\\\"false\\\" [date-picker]=\\\"true\\\" name=\\\"appointmentDate\\\" [(ngModel)]=\\\"serviceModel.appointmentDate\\\">\\n                            </amexio-date-time-picker>\\n                        </amexio-column>\\n                        <amexio-column [size]=6>\\n                            <amexio-dropdown [(ngModel)]=\\\"serviceModel.appointmentTime\\\" [disabled]=\\\"true\\\" (onSingleSelect)=\\\"setTime($event)\\\" [place-holder]=\\\"'Time'\\\" name=\\\"appointmentTime\\\" [field-label]=\\\"'Time'\\\" [data]=\\\"timeSlots\\\" [display-field]=\\\"'time'\\\" [value-field]=\\\"'timeId'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                    </amexio-row>\\n                    <amexio-row>\\n                        <amexio-column [size]=9>\\n                            <amexio-dropdown [(ngModel)]=\\\"serviceModel.assitantPerson\\\" [disabled]=\\\"true\\\" [place-holder]=\\\"'Service Assistant (SA)'\\\" name=\\\"assitantPerson\\\" [field-label]=\\\"'Service Assistant (SA)'\\\" [data]=\\\"assitantPerson\\\" [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                        <amexio-column [size]=3>\\n                            <amexio-label size=\\\"small-bold\\\" style=\\\"color:green\\\">Available</amexio-label>\\n                        </amexio-column>\\n                    </amexio-row>\\n                    <amexio-row>\\n                        <amexio-column [size]=12>\\n                            <amexio-toolbar>\\n                                <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n                                    <amexio-button [label]=\\\"'Back'\\\" (onClick)=\\\"onBackClick($event)\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Proceed to preferred location'\\\" [size]=\\\"'large'\\\">\\n                                    </amexio-button>\\n                                </amexio-toolbar-item>\\n                                <amexio-toolbar-item position-right>\\n                                    <amexio-button [label]=\\\"'Confirm'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Confirm'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"confirmAppointment($event)\\\">\\n                                    </amexio-button>\\n                                </amexio-toolbar-item>\\n                            </amexio-toolbar>\\n                        </amexio-column>\\n                    </amexio-row>\\n                </amexio-layout-item>\\n            </amexio-layout-columns>\\n\\n            <ng-template #elseblock>\\n                <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n                    <amexio-layout-item>\\n                        <amexio-label size=\\\"medium-bold\\\">Thank You!</amexio-label> <br /><br />\\n                        <amexio-label>Your service has been booked on {{serviceModel.appointmentDate | date:'MMM dd, yyyy'}} at 2PM</amexio-label><br /><br />\\n                        <amexio-label>Service Location:</amexio-label><br />\\n                        <amexio-label>Emirates Motor Company</amexio-label><br />\\n                        <amexio-label>M5, intersection, 17th Street</amexio-label><br />\\n                        <amexio-label>Phone: +91.0987654321</amexio-label><br /><br />\\n                        <amexio-toolbar>\\n                            <amexio-toolbar-item position-right>\\n                                <amexio-button [label]=\\\"'Close'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Close'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"close($event)\\\">\\n                                </amexio-button>\\n                            </amexio-toolbar-item>\\n                        </amexio-toolbar>\\n\\n                    </amexio-layout-item>\\n                </amexio-layout-columns>\\n\\n            </ng-template>\\n        </div>\\n    </amexio-body>\\n</amexio-window>\"","import { PersonalDetailsService } from 'projects/rina-lib/src/lib/services/personal.details.service';\nimport { PersonalDetails } from 'projects/rina-lib/src/lib/model/shared/personal.details.model';\nimport { Component, Input } from '@angular/core';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\nimport { LocationModel } from 'projects/rina-lib/src/lib/model/shared/location.model';\nimport { ServiceAssistantModel } from 'projects/rina-lib/src/lib/model/shared/serviceassistant.model';\nimport { WindowToogleService } from 'projects/rina-lib/src/lib/services/window.toggle.service';\nimport {SimpleChanges, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { TimeModel, TimeUtil } from 'amexio-ng-extensions';\n\n@Component({\n    selector: 'service-confirmation',\n    templateUrl: './service.confirmation.html'\n})\nexport class ServiceConfirmationComponent {\n\n    showWindow: boolean = true;\n    serviceModel: ServiceAvailibilityModel;\n    serviceLocations: LocationModel [];\n    timeSlots: TimeModel [];\n    assitantPerson: ServiceAssistantModel [];\n    showConfirmation: boolean = false;\n    @Output() onPrevious: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private windowTService: WindowToogleService, private personalDetailsService: PersonalDetailsService) {\n        this.serviceModel = new ServiceAvailibilityModel();\n        this.serviceLocations = [];\n        this.timeSlots = [];\n        this.assitantPerson = [];\n        debugger;\n        this.serviceModel = this.personalDetailsService.getPeferredLocation();\n        this.loadData();\n    }\n\n    confirmAppointment(personalDetails: PersonalDetails) {\n      debugger;\n        this.showConfirmation = true;\n        console.log(this.personalDetailsService.getPersonalDetails());\n    }\n\n    onBackClick(event: any) {\n      this.onPrevious.emit(event);\n    }\n\n    close(event: any) {\n        this.showWindow = false;\n    }\n\n    loadData() {\n      this.loadLocations();\n      this.loadAssitants();\n      this.loadWorkingSlots();\n    }\n    loadWorkingSlots() {\n      this.timeSlots = new TimeUtil().workingslot1();\n   }\n    loadAssitants() {\n      let response: any;\n      this.personalDetailsService.getAssitantList(this.serviceModel.location).subscribe(\n       res => {\n         response = res;\n       },\n       // tslint:disable-next-line:no-shadowed-variable\n       (error: any) => {\n         console.log('Invalid url');\n       },\n       () => {\n        this.assitantPerson = response;\n       }\n     );\n    }\n    loadLocations() {\n      let response: any;\n      this.personalDetailsService.getLocations().subscribe(\n       res => {\n         response = res;\n       },\n       // tslint:disable-next-line:no-shadowed-variable\n       (error: any) => {\n         console.log('Invalid url');\n       },\n       () => {\n        this.serviceLocations = response;\n       }\n     );\n    }\n}\n","import { PersonalDetailsService } from 'projects/rina-lib/src/lib/services/personal.details.service';\nimport { Component, SimpleChanges, OnChanges, Output, EventEmitter, OnInit } from '@angular/core';\nimport { PersonalDetails } from 'projects/rina-lib/src/lib/model/shared/personal.details.model';\nimport { FormGroup, FormArray, FormBuilder, Validators, FormControl } from '@angular/forms';\n@Component({\n    selector: 'personal-details',\n    templateUrl: './personal.details.html'\n})\nexport class PersonalDetailsComponent implements  OnInit, OnChanges {\n\n    showWindow: boolean = true;\n    preferredModeOfContacts: any[];\n    titles: any[];\n    vehicleTypes: any[];\n    modelYears: any[];\n    @Output() onNext: EventEmitter<any> = new EventEmitter<any>();\n    @Output() onClose: EventEmitter<any> = new EventEmitter<any>();\n    personalDetails: PersonalDetails;\n    personDetailsGroup: FormGroup;\n    constructor(private personalDetailsService: PersonalDetailsService, private fb: FormBuilder ) {\n      this.personalDetails = new PersonalDetails();\n        this.preferredModeOfContacts = [];\n        this.titles = [];\n        this.vehicleTypes = [];\n        this.modelYears = [];\n        this.preferredModeOfContacts.push({ primaryKey: '1', primaryDisplay: 'Phone' });\n        this.preferredModeOfContacts.push({ primaryKey: '2', primaryDisplay: 'Email' });\n    }\n\n    ngOnInit(): void {\n      this.getTitlesData();\n      this.getVehiclesData();\n      this.getVehiclesModelData();\n      this.valiadtePersonDetailForm();\n    }\n\n    valiadtePersonDetailForm() {\n      this.personDetailsGroup = this.fb.group({\n        Title: ['', [Validators.required]],\n        FirstName: ['', [Validators.required]],\n        Surname: ['', [Validators.required]],\n        Email: ['', [Validators.required, Validators.email]],\n        Phone: ['', [Validators.required]],\n        ContactPreference: ['1', [Validators.required]],\n        VehicleType: ['', [Validators.required]],\n        ModelYear: ['', [Validators.required]],\n        PresentKm: ['', [Validators.required]],\n        RegistrationNumber: ['', [Validators.required]]\n      });\n    }\n\n    getTitlesData() {\n      let response: any;\n      this.personalDetailsService.getTitles().subscribe(\n       res => {\n         response = res;\n       },\n       // tslint:disable-next-line:no-shadowed-variable\n       (error: any) => {\n         console.log('Invalid url');\n       },\n       () => {\n        this.titles = response;\n       }\n     );\n    }\n    getVehiclesData() {\n      let response: any;\n      this.personalDetailsService.getVehicles().subscribe(\n       res => {\n         response = res;\n       },\n       // tslint:disable-next-line:no-shadowed-variable\n       (error: any) => {\n         console.log('Invalid url');\n       },\n       () => {\n        this.vehicleTypes = response;\n       }\n     );\n    }\n    getVehiclesModelData() {\n      let response: any;\n      this.personalDetailsService.getVehicleModels().subscribe(\n       res => {\n         response = res;\n       },\n       // tslint:disable-next-line:no-shadowed-variable\n       (error: any) => {\n         console.log('Invalid url');\n       },\n       () => {\n        this.modelYears = response;\n       }\n     );\n    }\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['showWindow']) {\n          console.log(changes.showWindow.currentValue);\n        }\n      }\n\n    proceedToPreferredLocation(event: any) {\n        this.showWindow = false;\n        this.onNext.emit(this.personalDetails);\n        this.personalDetailsService.setPersonalDetails(this.personalDetails);\n    }\n\n    onCloseClick(event: any) {\n      this.onClose.emit(event);\n    }\n\n}\n","module.exports = \"<amexio-window class=\\\"person-details\\\" [(show)]=\\\"showWindow\\\" type=\\\"window\\\" [header]=\\\"false\\\" [footer]=\\\"false\\\" [closable]=\\\"false\\\">\\n    <amexio-body>\\n        <amexio-layout-columns [orientation]=\\\"'vertical'\\\" [border]=\\\"false\\\" [alignment]=\\\"'space-between'\\\">\\n            <amexio-layout-item>\\n                <div class=\\\"adjustbody\\\" [formGroup]=\\\"personDetailsGroup\\\">\\n                    <amexio-label size=\\\"medium-bold\\\">PERSONAL DETAILS</amexio-label>\\n                    <amexio-row>\\n                        <amexio-column [size]=2>\\n                            <amexio-dropdown [(ngModel)]=\\\"personalDetails.title\\\" formControlName=\\\"Title\\\" [search]=\\\"true\\\" name=\\\"title\\\" [(ngModel)]=\\\"personalDetails.title\\\" [place-holder]=\\\"'Select title'\\\" [field-label]=\\\"'Title'\\\" [data]=\\\"titles\\\" [value-field]=\\\"'primaryKey'\\\"\\n                                [display-field]=\\\"'primaryDisplay'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                        <amexio-column [size]=5>\\n                            <amexio-text-input [(ngModel)]=\\\"personalDetails.firstName\\\" formControlName=\\\"FirstName\\\" name=\\\"name\\\" field-label=\\\"Name\\\" place-holder=\\\"Name\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                        <amexio-column [size]=5>\\n                            <amexio-text-input [(ngModel)]=\\\"personalDetails.surname\\\" formControlName=\\\"Surname\\\" name=\\\"surname\\\" field-label=\\\"Surname\\\" place-holder=\\\"Surname\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                    </amexio-row>\\n\\n                    <amexio-row>\\n                        <amexio-column [size]=6>\\n                            <amexio-email-input [(ngModel)]=\\\"personalDetails.email\\\" formControlName=\\\"Email\\\" name=\\\"email\\\" [field-label]=\\\"'Email'\\\" [place-holder]=\\\"'Email'\\\">\\n                            </amexio-email-input>\\n                        </amexio-column>\\n                        <amexio-column [size]=6>\\n                            <amexio-text-input [(ngModel)]=\\\"personalDetails.phone\\\" formControlName=\\\"Phone\\\" name=\\\"phone\\\" field-label=\\\"Phone\\\" place-holder=\\\"phone\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                    </amexio-row>\\n\\n                    <amexio-row>\\n                        <amexio-column [size]=12>\\n                            <amexio-radio-group [(ngModel)]=\\\"personalDetails.perferredContact\\\" [field-label]=\\\"'Preferred mode of contact'\\\" formControlName=\\\"ContactPreference\\\" name=\\\"contactPreference\\\" [display-field]=\\\"'primaryDisplay'\\\" [value-field]=\\\"'primaryKey'\\\" [horizontal]=\\\"true\\\"\\n                                [data]=\\\"preferredModeOfContacts\\\">\\n                            </amexio-radio-group>\\n                        </amexio-column>\\n                    </amexio-row>\\n                    <br>\\n                    <amexio-label size=\\\"medium-bold\\\">VEHICLE DETAILS</amexio-label>\\n                    <amexio-row>\\n                        <amexio-column [size]=6>\\n                            <amexio-dropdown [(ngModel)]=\\\"personalDetails.vehicleType\\\" formControlName=\\\"VehicleType\\\" [search]=\\\"true\\\" name=\\\"vehicleType\\\" [place-holder]=\\\"'Vehicle Type'\\\" [field-label]=\\\"'Vehicle Type'\\\" [data]=\\\"vehicleTypes\\\" [value-field]=\\\"'primaryKey'\\\" [display-field]=\\\"'primaryDisplay'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                        <amexio-column [size]=6>\\n                            <amexio-dropdown [(ngModel)]=\\\"personalDetails.modelYear\\\" formControlName=\\\"ModelYear\\\" [search]=\\\"true\\\" name=\\\"modelYear\\\" [place-holder]=\\\"'Model Year'\\\" [field-label]=\\\"'Model Year'\\\" [data]=\\\"modelYears\\\" [value-field]=\\\"'primaryKey'\\\" [display-field]=\\\"'primaryDisplay'\\\">\\n                            </amexio-dropdown>\\n                        </amexio-column>\\n                    </amexio-row>\\n\\n                    <amexio-row>\\n                        <amexio-column [size]=6>\\n                            <amexio-number-input [(ngModel)]=\\\"personalDetails.presentKm\\\" formControlName=\\\"PresentKm\\\" name=\\\"presentKm\\\" [field-label]=\\\"'Present KM on your car'\\\" [place-holder]=\\\"'Enter KM on you car'\\\">\\n                            </amexio-number-input>\\n                        </amexio-column>\\n                        <amexio-column [size]=6>\\n                            <amexio-text-input [(ngModel)]=\\\"personalDetails.registrationNumber\\\" formControlName=\\\"RegistrationNumber\\\" name=\\\"registrationNumber\\\" field-label=\\\"Registration Plate (License Plate)\\\" place-holder=\\\"Registration plate\\\">\\n                            </amexio-text-input>\\n                        </amexio-column>\\n                    </amexio-row>\\n                    <amexio-row>\\n                        <amexio-column [size]=12>\\n                            <amexio-toolbar>\\n                                <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n                                    <amexio-button [label]=\\\"'Close'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Proceed to preferred location'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"onCloseClick($event)\\\">\\n                                    </amexio-button>\\n                                </amexio-toolbar-item>\\n                                <amexio-toolbar-item position-right>\\n                                    <amexio-button [label]=\\\"'Next'\\\" [type]=\\\"'theme-color'\\\" [disabled]=\\\"!personDetailsGroup.valid\\\" [tooltip]=\\\"'Proceed to preferred location'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"proceedToPreferredLocation($event)\\\">\\n                                    </amexio-button>\\n                                </amexio-toolbar-item>\\n                            </amexio-toolbar>\\n                        </amexio-column>\\n                    </amexio-row>\\n                </div>\\n            </amexio-layout-item>\\n        </amexio-layout-columns>\\n    </amexio-body>\\n</amexio-window>\"","module.exports = \"<amexio-window class=\\\"preferredlocation\\\" [(show)]=\\\"showWindow\\\" type=\\\"window\\\" [header]=\\\"false\\\" [footer]=\\\"false\\\" [closable]=\\\"false\\\">\\n    <amexio-body>\\n\\n        <amexio-label size=\\\"medium-bold\\\">PREFERRED LOCATION AND TIME</amexio-label>\\n        <div class=\\\"adjustbody\\\">\\n            <service-availiblity-lib #formgroup [service-model]=\\\"serviceModel\\\" [start-time]=\\\"10\\\" [end-time]=\\\"15\\\"></service-availiblity-lib>\\n        </div>\\n        <amexio-toolbar>\\n            <amexio-toolbar-item position-right>\\n                <amexio-checkbox [field-label]=\\\"'Notify SA'\\\" [(ngModel)]=\\\"isNotifySA\\\">\\n                </amexio-checkbox>\\n\\n            </amexio-toolbar-item>\\n            <amexio-toolbar-item position-right [seperator-position]=\\\"'right'\\\">\\n                <amexio-button [label]=\\\"'Back'\\\" [type]=\\\"'theme-backgroundcolor'\\\" [tooltip]=\\\"'Proceed to personal profile'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"backClick($event)\\\">\\n                </amexio-button>\\n            </amexio-toolbar-item>\\n            <amexio-toolbar-item position-right>\\n                <amexio-button [label]=\\\"'Schedule'\\\" [type]=\\\"'theme-color'\\\" [tooltip]=\\\"'Proceed to preferred location'\\\" [size]=\\\"'large'\\\" (onClick)=\\\"scheduleAppointment($event)\\\">\\n                </amexio-button>\\n            </amexio-toolbar-item>\\n        </amexio-toolbar>\\n    </amexio-body>\\n</amexio-window>\"","import { Component, Output, EventEmitter } from '@angular/core';\nimport { ServiceAvailibilityModel } from 'projects/rina-lib/src/public_api';\nimport { WindowToogleService } from 'projects/rina-lib/src/lib/services/window.toggle.service';\n\n@Component({\n    selector: 'alfahim-preferred-location',\n    templateUrl: './preferred.location.html'\n})\nexport class PreferredLocationComponent {\n\n    showWindow: boolean = true;\n    serviceModel: ServiceAvailibilityModel;\n    @Output() onNext: EventEmitter<any> = new EventEmitter<any>();\n    @Output() onPrevious: EventEmitter<any> = new EventEmitter<any>();\n\n    isNotifySA: boolean;\n\n    constructor(private windownToggleService: WindowToogleService) {\n        this.serviceModel = new ServiceAvailibilityModel();\n    }\n\n    scheduleAppointment(event: any) {\n\n        this.onNext.emit(this.serviceModel);\n    }\n\n    backClick(event: any) {\n      this.onPrevious.emit(event);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}